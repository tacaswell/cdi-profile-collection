[project]
channels = ["conda-forge"]
name = "cdi-profile-collection"
platforms = ["linux-64"]
version = "2025.3.0"

[system-requirements]
libc = "2.17"

[feature.profile.dependencies]
bluesky-base = "==1.14.4"
bluesky-queueserver = "*"
matplotlib-base= ">=3.9.3,<4"
networkx = ">=3.4.2,<4"
nslsii = "==0.11.4"
numpy = "*"
ophyd = "==1.11.0"
pyepics = "*"
python = ">=3.12,<3.13"
semver = ">=3.0.4,<4"
tiled-client = "==0.1.0b39"

# needed until we get p4p packaged
nose2 = ">=0.9.2,<0.10"
ply = ">=3.11,<4"
# needed until we get ophyd-async packaged
colorlog = ">=6.9.0,<7"
epicscorelibs = "*"
pydantic-numpy = "*"
hdf5-external-filter-plugins = ">=0.1.0,<0.2"
blosc-hdf5-plugin = ">=1.0.1,<2"
databroker = "==2.0.0b68"


[feature.profile.pypi-dependencies]
ophyd-async = { version = ">=0.9.0, <0.10", extras = ["ca", "pva"] }
# TODO get this onto conda-forge
cditools = { git = "https://github.com/nsls2/cditools" }


[feature.qs.dependencies]
bluesky-queueserver = "*"
bluesky-httpserver = "*"

[feature.qs.tasks]
# This section needs some development work to understand the best way to
# thread the required configuration through both the task and files checked into
# the profile.  These will interact with the ansible roles for pushing out the
# systemd units
qs-backend = "start-re-manager --profile-dir=."
qs-server = "uvicorn --host localhost --port 60610 bluesky_httpserver.server:app"


[feature.terminal.dependencies]
ipython = ">=9.5.0"
pyside6 = "*"
numpy = ">2"


[feature.terminal.tasks]
start = "unset SESSION_MANAGER && MPLBACKEND=qtagg ipython --profile-dir=."
pvs = "ipython --profile-dir=. -c 'get_pv_types(); exit()'"

[environments]
terminal = {features=["profile", "terminal"], solve-group="profile"}
qs = {features=["profile", "qs"], solve-group="profile"}
